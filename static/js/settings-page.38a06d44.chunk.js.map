{"version":3,"sources":["components/SettingsList/SettingsList.module.scss","components/SettingsList/SettingsList.js","views/SettingsPage.js"],"names":["module","exports","MyTextInput","label","props","useField","field","meta","className","styles","htmlFor","id","name","touched","error","button","type","MyRadioBtn","children","value","MyDownloadInput","setFieldValue","useState","fakeField","setFakeField","onChange","e","currentTarget","files","target","onClick","SettingsList","dispatch","useDispatch","initialValues","firstName","validationSchema","Yup","required","onSubmit","values","setSubmitting","resetForm","changeFirstName","form","placeholder","autoComplete","lastName","changeLastName","email","changeEmail","password","min","changePassword","sex","changeSex","role","avatar","shape","formData","FormData","append","changeAvatar","encType","accept","SettingsPage","Container","User","sexRend"],"mappings":"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","file":"static/js/settings-page.38a06d44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SettingsList_button__26RvH\",\"settings-list\":\"SettingsList_settings-list__3or-O\",\"form-title\":\"SettingsList_form-title__3rzX1\",\"button__icon\":\"SettingsList_button__icon__3Mkfp\",\"settings-list-item\":\"SettingsList_settings-list-item__amq55\",\"form\":\"SettingsList_form__-ZYId\",\"form-btn\":\"SettingsList_form-btn__1B43P\",\"form-container\":\"SettingsList_form-container__QxJpN\",\"form-label\":\"SettingsList_form-label__1JuJB\",\"form-error\":\"SettingsList_form-error__1rWPo\",\"form-input\":\"SettingsList_form-input__3dAGO\",\"form-radio\":\"SettingsList_form-radio__3xX1j\",\"form-radio-btn\":\"SettingsList_form-radio-btn__2krPI\",\"input-download\":\"SettingsList_input-download__1-Q0D\",\"input-download-fake\":\"SettingsList_input-download-fake__ToKeL\",\"input-download-wrapper\":\"SettingsList_input-download-wrapper__2Tl9s\",\"input-download-label\":\"SettingsList_input-download-label__2-USq\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './SettingsList.module.scss';\nimport { Formik, Form, Field, useField } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  changeFirstName,\n  changeLastName,\n  changeEmail,\n  changePassword,\n  changeSex,\n  changeAvatar,\n} from '../../redux/auth';\n\nconst MyTextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <label className={styles['form-label']} htmlFor={props.id || props.name}>\n        <span>{label}</span>\n        {meta.touched && meta.error ? (\n          <div className={styles['form-error']}>*{meta.error}</div>\n        ) : null}\n      </label>\n      <div className={styles['form-container']}>\n        <input className={styles['form-input']} {...field} {...props} />\n        <button\n          className={`${styles.button} ${styles['form-btn']}`}\n          type=\"submit\"\n        >\n          Иземенить\n        </button>\n      </div>\n    </>\n  );\n};\n\nconst MyRadioBtn = ({ children, ...props }) => {\n  return (\n    <label className={styles['form-radio']}>\n      <Field\n        className={styles['form-radio-btn']}\n        type=\"radio\"\n        value={children === 'мужской' ? 'male' : 'female'}\n        {...props}\n      />\n      {children}\n    </label>\n  );\n};\n\nconst MyDownloadInput = ({ label, setFieldValue, ...props }) => {\n  const [fakeField, setFakeField] = useState(null);\n\n  const handleChange = e => {\n    setFieldValue('avatar', e.currentTarget.files[0]);\n    setFakeField(e?.target?.files[0]?.name);\n  };\n\n  const handleClick = () => {\n    setFakeField(null);\n  };\n\n  return (\n    <div className={styles['input-download-wrapper']}>\n      <input\n        className={styles['input-download']}\n        name=\"file\"\n        type=\"file\"\n        id=\"field__file-2\"\n        {...props}\n        onChange={handleChange}\n      />\n\n      <label className={styles['input-download-label']} htmlFor=\"field__file-2\">\n        {label}\n        <div className={styles['form-container']}>\n          <div className={styles['input-download-fake']}>\n            {fakeField ? fakeField : 'Выбрать файл'}\n          </div>\n          <button\n            className={`${styles.button} ${styles['form-btn']}`}\n            onClick={handleClick}\n            type=\"submit\"\n          >\n            Иземенить\n          </button>\n        </div>\n      </label>\n    </div>\n  );\n};\n\nexport const SettingsList = () => {\n  const dispatch = useDispatch();\n  return (\n    <ul className={`${styles['settings-list']}`}>\n      <li className={`${styles['settings-list-item']}`}>\n        <Formik\n          initialValues={{\n            firstName: '',\n          }}\n          validationSchema={Yup.object({\n            firstName: Yup.string().required('обязательно'),\n          })}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            dispatch(changeFirstName(values));\n            setSubmitting(false);\n            resetForm();\n          }}\n        >\n          <Form className={styles.form}>\n            <MyTextInput\n              label=\"Изменить имя\"\n              name=\"firstName\"\n              id=\"firstName\"\n              type=\"text\"\n              placeholder=\"Введите имя\"\n              autoComplete=\"off\"\n            />\n          </Form>\n        </Formik>\n      </li>\n      <li className={`${styles['settings-list-item']}`}>\n        <Formik\n          initialValues={{\n            lastName: '',\n          }}\n          validationSchema={Yup.object({\n            lastName: Yup.string().required('обязательно'),\n          })}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            dispatch(changeLastName(values));\n            setSubmitting(false);\n            resetForm();\n          }}\n        >\n          <Form className={styles.form}>\n            <MyTextInput\n              label=\"Изменить фамилию\"\n              name=\"lastName\"\n              id=\"lastName\"\n              type=\"text\"\n              placeholder=\"Введите фамилию\"\n              autoComplete=\"off\"\n            />\n          </Form>\n        </Formik>\n      </li>\n      <li className={`${styles['settings-list-item']}`}>\n        <Formik\n          initialValues={{\n            email: '',\n          }}\n          validationSchema={Yup.object({\n            email: Yup.string()\n              .email('Указан неверный email')\n              .required('обязательно'),\n          })}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            dispatch(changeEmail(values));\n            setSubmitting(false);\n            resetForm();\n          }}\n        >\n          <Form className={styles.form}>\n            <MyTextInput\n              label=\"Изменить Email\"\n              name=\"email\"\n              id=\"email\"\n              type=\"email\"\n              placeholder=\"user@webstudio.com\"\n              autoComplete=\"off\"\n            />\n          </Form>\n        </Formik>\n      </li>\n      <li className={`${styles['settings-list-item']}`}>\n        <Formik\n          initialValues={{\n            password: '',\n          }}\n          validationSchema={Yup.object({\n            password: Yup.string().min(6).required('обязательно'),\n          })}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            dispatch(changePassword(values));\n            setSubmitting(false);\n            resetForm();\n          }}\n        >\n          <Form className={styles.form}>\n            <MyTextInput\n              label=\"Изменить пароль\"\n              name=\"password\"\n              id=\"password\"\n              type=\"password\"\n              placeholder=\"password\"\n              autoComplete=\"off\"\n            />\n          </Form>\n        </Formik>\n      </li>\n      <li className={`${styles['settings-list-item']}`}>\n        <Formik\n          initialValues={{\n            sex: '',\n          }}\n          validationSchema={Yup.object({\n            sex: Yup.string().required('обязательно'),\n          })}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            dispatch(changeSex(values));\n            setSubmitting(false);\n            resetForm();\n          }}\n        >\n          <Form className={styles.form}>\n            <div className={styles['form-label']} id=\"my-radio-group\">\n              Изменить пол\n            </div>\n            <div className={styles['form-container']}>\n              <div role=\"group\" aria-labelledby=\"my-radio-group\">\n                <MyRadioBtn name=\"sex\">мужской</MyRadioBtn>\n                <MyRadioBtn name=\"sex\">женский</MyRadioBtn>\n              </div>\n              <button\n                className={`${styles.button} ${styles['form-btn']}`}\n                type=\"submit\"\n              >\n                Иземенить\n              </button>\n            </div>\n          </Form>\n        </Formik>\n      </li>\n      <li className={`${styles['settings-list-item']}`}>\n        <Formik\n          initialValues={{\n            avatar: '',\n          }}\n          validationSchema={Yup.object().shape({\n            avatar: Yup.mixed().required('обязательно'),\n          })}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            const formData = new FormData();\n            formData.append('avatar', values.avatar);\n            dispatch(changeAvatar(formData));\n            setSubmitting(false);\n            resetForm();\n          }}\n        >\n          {({ setFieldValue }) => (\n            <Form encType=\"multipart/form-data\" className={styles.form}>\n              <MyDownloadInput\n                label=\"Иземенить аватар\"\n                name=\"avatar\"\n                accept=\"image/*\"\n                setFieldValue={setFieldValue}\n              />\n            </Form>\n          )}\n        </Formik>\n      </li>\n    </ul>\n  );\n};\n","import { SettingsList } from '../components/SettingsList/SettingsList';\nimport User from '../components/User';\nimport Container from '../components/Wrappers/Container';\n\nconst SettingsPage = () => (\n  <Container type=\"settings\">\n    <User sexRend />\n    <SettingsList />\n  </Container>\n);\n\nexport default SettingsPage;\n"],"sourceRoot":""}