{"version":3,"sources":["sass/Reg-form.module.scss","views/LogInPage.js"],"names":["module","exports","MyTextInput","label","props","useField","field","meta","className","styles","htmlFor","id","name","touched","error","LogInPage","initialValues","email","password","validationSchema","Yup","required","min","onSubmit","values","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","form","type","placeholder","autoComplete"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,aAAa,6BAA6B,KAAO,uBAAuB,iBAAiB,iCAAiC,WAAW,2BAA2B,aAAa,6BAA6B,oBAAoB,oCAAoC,iBAAiB,iCAAiC,aAAa,6BAA6B,aAAa,+B,kICGvXC,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUC,EAAY,iBAC3C,EAAsBC,YAASD,GAA/B,mBAAOE,EAAP,KAAcC,EAAd,KACA,OACE,sBAAKC,UAAWC,IAAO,kBAAvB,UACE,wBAAOD,UAAWC,IAAO,cAAeC,QAASN,EAAMO,IAAMP,EAAMQ,KAAnE,UACGT,EACAI,EAAKM,SAAWN,EAAKO,MACpB,sBAAKN,UAAWC,IAAO,cAAvB,cAAwCF,EAAKO,SAC3C,QAEN,+CAAON,UAAWC,IAAO,eAAmBH,GAAWF,QAoD9CW,UA/CG,WAChB,OACE,cAAC,IAAD,CACEC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,IAAW,CAC3BH,MAAOG,MACJH,MAAM,+FACNI,SAAS,sEACZH,SAAUE,MAAaE,IAAI,GAAGD,SAAS,wEAEzCE,SAAU,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAClCC,YAAW,WACTC,MAAMC,KAAKC,UAAUN,EAAQ,KAAM,IACnCC,GAAc,GACdC,MACC,MAhBP,SAmBE,eAAC,IAAD,CAAMlB,UAAWC,IAAOsB,KAAxB,UACE,oBAAIvB,UAAWC,IAAO,cAAtB,sCAEA,cAACP,EAAD,CACEC,MAAM,QACNS,KAAK,QACLoB,KAAK,QACLC,YAAY,qBACZC,aAAa,QAGf,cAAChC,EAAD,CACEC,MAAM,uCACNS,KAAK,WACLoB,KAAK,WACLE,aAAa,QAGf,wBAAQ1B,UAAWC,IAAO,YAAauB,KAAK,SAA5C","file":"static/js/login-page.e8e1c38b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-title\":\"Reg-form_form-title__3AMox\",\"form\":\"Reg-form_form__1OFJW\",\"form-container\":\"Reg-form_form-container__19byQ\",\"form-btn\":\"Reg-form_form-btn__PSCzj\",\"form-label\":\"Reg-form_form-label__22Ags\",\"form-label__radio\":\"Reg-form_form-label__radio__TV6Kq\",\"form-radio-btn\":\"Reg-form_form-radio-btn__30r_1\",\"form-input\":\"Reg-form_form-input__2dU37\",\"form-error\":\"Reg-form_form-error__2f5Lm\"};","import React from 'react';\r\nimport { Formik, Form, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport styles from '../sass/Reg-form.module.scss';\r\nconst MyTextInput = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div className={styles['form-container']}>\r\n      <label className={styles['form-label']} htmlFor={props.id || props.name}>\r\n        {label}\r\n        {meta.touched && meta.error ? (\r\n          <div className={styles['form-error']}>*{meta.error}</div>\r\n        ) : null}\r\n      </label>\r\n      <input className={styles['form-input']} {...field} {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LogInPage = () => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object({\r\n        email: Yup.string()\r\n          .email('Указан неверный email')\r\n          .required('Обязательно'),\r\n        password: Yup.string().min(6).required('Обязательно'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n          resetForm();\r\n        }, 400);\r\n      }}\r\n    >\r\n      <Form className={styles.form}>\r\n        <h1 className={styles['form-title']}>Вход</h1>\r\n\r\n        <MyTextInput\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"user@webstudio.com\"\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <MyTextInput\r\n          label=\"Пароль\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <button className={styles['form-btn']} type=\"submit\">\r\n          Вход\r\n        </button>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default LogInPage;\r\n"],"sourceRoot":""}