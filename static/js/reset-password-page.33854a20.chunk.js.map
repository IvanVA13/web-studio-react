{"version":3,"sources":["sass/Reg-form.module.scss","views/ResetPasswordPage.js"],"names":["module","exports","MyTextInput","label","props","useField","field","meta","className","styles","htmlFor","id","name","touched","error","LogInPage","loc","useRouteMatch","dispatch","useDispatch","initialValues","password","validationSchema","Yup","min","required","onSubmit","values","setSubmitting","resetForm","resetPassword","resetPasswordToken","params","form","type","autoComplete","button"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,kBAAkB,kCAAkC,YAAY,4BAA4B,MAAQ,wBAAwB,OAAS,yBAAyB,aAAa,6BAA6B,gBAAgB,gCAAgC,aAAe,+BAA+B,KAAO,uBAAuB,iBAAiB,iCAAiC,WAAW,2BAA2B,kBAAkB,kCAAkC,aAAa,6BAA6B,oBAAoB,oCAAoC,iBAAiB,iCAAiC,aAAa,6BAA6B,aAAa,6BAA6B,mBAAmB,mCAAmC,YAAY,8B,0JCQtwBC,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUC,EAAY,iBAC3C,EAAsBC,YAASD,GAA/B,mBAAOE,EAAP,KAAcC,EAAd,KACA,OACE,sBAAKC,UAAWC,IAAO,kBAAvB,UACE,wBAAOD,UAAWC,IAAO,cAAeC,QAASN,EAAMO,IAAMP,EAAMQ,KAAnE,UACGT,EACAI,EAAKM,SAAWN,EAAKO,MACpB,sBAAKN,UAAWC,IAAO,cAAvB,cAAwCF,EAAKO,SAC3C,QAEN,+CAAON,UAAWC,IAAO,eAAmBH,GAAWF,QA8C9CW,UAzCG,WAChB,IAAMC,EAAMC,cACNC,EAAWC,cACjB,OACE,cAAC,IAAD,CACEC,cAAe,CACbC,SAAU,IAEZC,iBAAkBC,IAAW,CAC3BF,SAAUE,MAAaC,IAAI,GAAGC,SAAS,wEAEzCC,SAAU,SAACC,EAAD,GAA2C,IAAD,EAA/BC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAClCX,EACEY,YAAc,CACZC,mBAAkB,OAAEf,QAAF,IAAEA,GAAF,UAAEA,EAAKgB,cAAP,aAAE,EAAarB,GACjCU,SAAUM,KAGdC,GAAc,GACdC,KAfJ,SAkBE,eAAC,IAAD,CAAMrB,UAAWC,IAAOwB,KAAxB,UACE,oBAAIzB,UAAWC,IAAO,cAAtB,4HACA,cAACP,EAAD,CACEC,MAAM,sEACNS,KAAK,WACLsB,KAAK,WACLC,aAAa,QAEf,wBACE3B,UAAS,UAAKC,IAAO2B,OAAZ,YAAsB3B,IAAO,aACtCyB,KAAK,SAFP","file":"static/js/reset-password-page.33854a20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"google-reg-link\":\"Reg-form_google-reg-link__2QOJQ\",\"form-link\":\"Reg-form_form-link__1lShV\",\"image\":\"Reg-form_image__OuwiR\",\"button\":\"Reg-form_button__3Kz44\",\"form-title\":\"Reg-form_form-title__3AMox\",\"image--margin\":\"Reg-form_image--margin__1OcBr\",\"button__icon\":\"Reg-form_button__icon__1Adkp\",\"form\":\"Reg-form_form__1OFJW\",\"form-container\":\"Reg-form_form-container__19byQ\",\"form-btn\":\"Reg-form_form-btn__PSCzj\",\"google-reg-icon\":\"Reg-form_google-reg-icon__3eEzH\",\"form-label\":\"Reg-form_form-label__22Ags\",\"form-label__radio\":\"Reg-form_form-label__radio__TV6Kq\",\"form-radio-btn\":\"Reg-form_form-radio-btn__30r_1\",\"form-input\":\"Reg-form_form-input__2dU37\",\"form-error\":\"Reg-form_form-error__2f5Lm\",\"form-link-second\":\"Reg-form_form-link-second__2EJPu\",\"form-desc\":\"Reg-form_form-desc__1eJ1l\"};","import React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { Formik, Form, useField } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\n\nimport { resetPassword } from '../redux/auth';\nimport styles from '../sass/Reg-form.module.scss';\n\nconst MyTextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <div className={styles['form-container']}>\n      <label className={styles['form-label']} htmlFor={props.id || props.name}>\n        {label}\n        {meta.touched && meta.error ? (\n          <div className={styles['form-error']}>*{meta.error}</div>\n        ) : null}\n      </label>\n      <input className={styles['form-input']} {...field} {...props} />\n    </div>\n  );\n};\n\nconst LogInPage = () => {\n  const loc = useRouteMatch();\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        password: '',\n      }}\n      validationSchema={Yup.object({\n        password: Yup.string().min(6).required('Обязательно'),\n      })}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        dispatch(\n          resetPassword({\n            resetPasswordToken: loc?.params?.id,\n            password: values,\n          }),\n        );\n        setSubmitting(false);\n        resetForm();\n      }}\n    >\n      <Form className={styles.form}>\n        <h1 className={styles['form-title']}>Введите новый пароль</h1>\n        <MyTextInput\n          label=\"Навый пароль\"\n          name=\"password\"\n          type=\"password\"\n          autoComplete=\"off\"\n        />\n        <button\n          className={`${styles.button} ${styles['form-btn']}`}\n          type=\"submit\"\n        >\n          Изменить пароль\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default LogInPage;\n"],"sourceRoot":""}