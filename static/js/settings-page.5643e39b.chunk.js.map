{"version":3,"sources":["components/SettingsList/SettingsList.module.scss","components/SettingsList/SettingsList.js","views/SettingsPage.js"],"names":["module","exports","MyTextInput","label","props","useField","field","meta","className","styles","htmlFor","id","name","touched","error","type","MyRadioBtn","children","value","MyDownloadInput","setFieldValue","useState","fakeField","setFakeField","onChange","e","currentTarget","files","target","onClick","SettingsList","initialValues","firstName","validationSchema","Yup","required","onSubmit","values","setSubmitting","resetForm","console","log","form","placeholder","autoComplete","lastName","email","password","min","sex","role","avatar","shape","encType","accept","SettingsPage"],"mappings":"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","file":"static/js/settings-page.5643e39b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings-list\":\"SettingsList_settings-list__3FaxN\",\"form-title\":\"SettingsList_form-title__F9CZW\",\"settings-list-item\":\"SettingsList_settings-list-item__13Fjk\",\"form\":\"SettingsList_form__3LKx_\",\"form-btn\":\"SettingsList_form-btn__25qE6\",\"form-container\":\"SettingsList_form-container__1XZ24\",\"form-label\":\"SettingsList_form-label__18LGW\",\"form-error\":\"SettingsList_form-error__3t93u\",\"form-input\":\"SettingsList_form-input__3uLxb\",\"form-radio\":\"SettingsList_form-radio__1hD3E\",\"form-radio-btn\":\"SettingsList_form-radio-btn__2irX_\",\"input-download\":\"SettingsList_input-download__3_RLs\",\"input-download-fake\":\"SettingsList_input-download-fake__1pCha\",\"input-download-wrapper\":\"SettingsList_input-download-wrapper__YUpJs\",\"input-download-label\":\"SettingsList_input-download-label__2nRLw\"};","import React, { useState } from 'react';\nimport styles from './SettingsList.module.scss';\nimport { Formik, Form, Field, useField } from 'formik';\nimport * as Yup from 'yup';\n\nconst MyTextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <label className={styles['form-label']} htmlFor={props.id || props.name}>\n        <span>{label}</span>\n        {meta.touched && meta.error ? (\n          <div className={styles['form-error']}>*{meta.error}</div>\n        ) : null}\n      </label>\n      <div className={styles['form-container']}>\n        <input className={styles['form-input']} {...field} {...props} />\n        <button className={styles['form-btn']} type=\"submit\">\n          Иземенить\n        </button>\n      </div>\n    </>\n  );\n};\n\nconst MyRadioBtn = ({ children, ...props }) => {\n  return (\n    <label className={styles['form-radio']}>\n      <Field\n        className={styles['form-radio-btn']}\n        type=\"radio\"\n        value={children === 'мужской' ? 'male' : 'female'}\n        {...props}\n      />\n      {children}\n    </label>\n  );\n};\n\nconst MyDownloadInput = ({ label, setFieldValue, ...props }) => {\n  const [fakeField, setFakeField] = useState(null);\n\n  const handleChange = e => {\n    setFieldValue('avatar', e?.currentTarget?.files[0]);\n    setFakeField(e?.target?.files[0]?.name);\n  };\n\n  const handleClick = () => {\n    setFakeField(null);\n  };\n\n  return (\n    <div className={styles['input-download-wrapper']}>\n      <input\n        className={styles['input-download']}\n        name=\"file\"\n        type=\"file\"\n        id=\"field__file-2\"\n        {...props}\n        onChange={handleChange}\n      />\n\n      <label className={styles['input-download-label']} htmlFor=\"field__file-2\">\n        {label}\n        <div className={styles['form-container']}>\n          <div className={styles['input-download-fake']}>\n            {fakeField ? fakeField : 'Выбрать файл'}\n          </div>\n          <button\n            className={styles['form-btn']}\n            onClick={handleClick}\n            type=\"submit\"\n          >\n            Иземенить\n          </button>\n        </div>\n      </label>\n    </div>\n  );\n};\n\nexport const SettingsList = () => {\n  return (\n    <div className=\"container\">\n      <ul className={`${styles['settings-list']}`}>\n        <li className={`${styles['settings-list-item']}`}>\n          <Formik\n            initialValues={{\n              firstName: '',\n            }}\n            validationSchema={Yup.object({\n              firstName: Yup.string().required('обязательно'),\n            })}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              console.log(values);\n              setSubmitting(false);\n              resetForm();\n            }}\n          >\n            <Form className={styles.form}>\n              <MyTextInput\n                label=\"Изменить имя\"\n                name=\"firstName\"\n                id=\"firstName\"\n                type=\"text\"\n                placeholder=\"Введите имя\"\n                autoComplete=\"off\"\n              />\n            </Form>\n          </Formik>\n        </li>\n        <li className={`${styles['settings-list-item']}`}>\n          <Formik\n            initialValues={{\n              lastName: '',\n            }}\n            validationSchema={Yup.object({\n              lastName: Yup.string().required('обязательно'),\n            })}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              console.log(values);\n              setSubmitting(false);\n              resetForm();\n            }}\n          >\n            <Form className={styles.form}>\n              <MyTextInput\n                label=\"Изменить фамилию\"\n                name=\"lastName\"\n                id=\"lastName\"\n                type=\"text\"\n                placeholder=\"Введите фамилию\"\n                autoComplete=\"off\"\n              />\n            </Form>\n          </Formik>\n        </li>\n        <li className={`${styles['settings-list-item']}`}>\n          <Formik\n            initialValues={{\n              email: '',\n            }}\n            validationSchema={Yup.object({\n              email: Yup.string()\n                .email('Указан неверный email')\n                .required('обязательно'),\n            })}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              console.log(values);\n              setSubmitting(false);\n              resetForm();\n            }}\n          >\n            <Form className={styles.form}>\n              <MyTextInput\n                label=\"Изменить Email\"\n                name=\"email\"\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"user@webstudio.com\"\n                autoComplete=\"off\"\n              />\n            </Form>\n          </Formik>\n        </li>\n        <li className={`${styles['settings-list-item']}`}>\n          <Formik\n            initialValues={{\n              password: '',\n            }}\n            validationSchema={Yup.object({\n              password: Yup.string().min(6).required('обязательно'),\n            })}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              console.log(values);\n              setSubmitting(false);\n              resetForm();\n            }}\n          >\n            <Form className={styles.form}>\n              <MyTextInput\n                label=\"Изменить пароль\"\n                name=\"password\"\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                autoComplete=\"off\"\n              />\n            </Form>\n          </Formik>\n        </li>\n        <li className={`${styles['settings-list-item']}`}>\n          <Formik\n            initialValues={{\n              sex: '',\n            }}\n            validationSchema={Yup.object({\n              sex: Yup.string().required('обязательно'),\n            })}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              console.log(values);\n              setSubmitting(false);\n              resetForm();\n            }}\n          >\n            <Form className={styles.form}>\n              <div className={styles['form-label']} id=\"my-radio-group\">\n                Изменить пол\n              </div>\n              <div className={styles['form-container']}>\n                <div role=\"group\" aria-labelledby=\"my-radio-group\">\n                  <MyRadioBtn name=\"sex\">мужской</MyRadioBtn>\n                  <MyRadioBtn name=\"sex\">женский</MyRadioBtn>\n                </div>\n                <button className={styles['form-btn']} type=\"submit\">\n                  Иземенить\n                </button>\n              </div>\n            </Form>\n          </Formik>\n        </li>\n        <li className={`${styles['settings-list-item']}`}>\n          <Formik\n            initialValues={{\n              avatar: '',\n            }}\n            validationSchema={Yup.object().shape({\n              avatar: Yup.mixed().required('обязательно'),\n            })}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              console.log(values);\n              setSubmitting(false);\n              resetForm();\n            }}\n          >\n            {({ setFieldValue }) => (\n              <Form encType=\"multipart/form-data\" className={styles.form}>\n                <MyDownloadInput\n                  label=\"Иземенить аватар\"\n                  name=\"avatar\"\n                  accept=\"image/*\"\n                  setFieldValue={setFieldValue}\n                />\n              </Form>\n            )}\n          </Formik>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { SettingsList } from '../components/SettingsList/SettingsList';\r\n\r\nconst SettingsPage = () => <SettingsList />;\r\n\r\nexport default SettingsPage;\r\n"],"sourceRoot":""}