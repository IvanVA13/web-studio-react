{"version":3,"sources":["sass/Reg-form.module.scss","views/RegisterPage.js"],"names":["module","exports","MyTextInput","label","props","useField","field","meta","className","styles","htmlFor","id","name","touched","error","MyRadioBtn","children","type","value","RegisterPage","initialValues","firstName","lastName","email","password","sex","validationSchema","Yup","required","min","onSubmit","values","setSubmitting","resetForm","console","log","form","placeholder","autoComplete","role"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,aAAa,6BAA6B,KAAO,uBAAuB,iBAAiB,iCAAiC,WAAW,2BAA2B,aAAa,6BAA6B,oBAAoB,oCAAoC,iBAAiB,iCAAiC,aAAa,6BAA6B,aAAa,+B,iJCGvXC,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUC,EAAY,iBAC3C,EAAsBC,YAASD,GAA/B,mBAAOE,EAAP,KAAcC,EAAd,KACA,OACE,sBAAKC,UAAWC,IAAO,kBAAvB,UACE,wBAAOD,UAAWC,IAAO,cAAeC,QAASN,EAAMO,IAAMP,EAAMQ,KAAnE,UACGT,EACAI,EAAKM,SAAWN,EAAKO,MACpB,sBAAKN,UAAWC,IAAO,cAAvB,cAAwCF,EAAKO,SAC3C,QAEN,+CAAON,UAAWC,IAAO,eAAmBH,GAAWF,QAKvDW,EAAa,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaZ,EAAY,iBAC7C,OACE,wBAAOI,UAAWC,IAAO,qBAAzB,UACE,cAAC,IAAD,aACED,UAAWC,IAAO,kBAClBQ,KAAK,QACLC,MAAoB,+CAAbF,EAAyB,OAAS,UACrCZ,IAELY,MA+EQG,UA1EM,WACnB,OACE,cAAC,IAAD,CACEC,cAAe,CACbC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,IAAK,IAEPC,iBAAkBC,IAAW,CAC3BN,UAAWM,MACXL,SAAUK,MACVJ,MAAOI,MACJJ,MAAM,+FACNK,SAAS,sEACZJ,SAAUG,MAAaE,IAAI,GAAGD,SAAS,wEAEzCE,SAAU,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAClCC,QAAQC,IAAIJ,GACZC,GAAc,GACdC,KAnBJ,SAsBE,eAAC,IAAD,CAAMzB,UAAWC,IAAO2B,KAAxB,UACE,oBAAI5B,UAAWC,IAAO,cAAtB,gFACA,cAACP,EAAD,CACEC,MAAM,qBACNS,KAAK,YACLK,KAAK,OACLoB,YAAY,gEACZC,aAAa,QAGf,cAACpC,EAAD,CACEC,MAAM,6CACNS,KAAK,WACLK,KAAK,OACLoB,YAAY,wFACZC,aAAa,QAGf,cAACpC,EAAD,CACEC,MAAM,QACNS,KAAK,QACLK,KAAK,QACLoB,YAAY,qBACZC,aAAa,QAGf,cAACpC,EAAD,CACEC,MAAM,uCACNS,KAAK,WACLK,KAAK,WACLqB,aAAa,QAEf,sBAAK9B,UAAWC,IAAO,kBAAvB,UACE,qBAAKD,UAAWC,IAAO,cAAeE,GAAG,iBAAzC,iBAGA,sBAAK4B,KAAK,QAAQ,kBAAgB,iBAAlC,UACE,cAACxB,EAAD,CAAYH,KAAK,MAAjB,wDACA,cAACG,EAAD,CAAYH,KAAK,MAAjB,8DAIJ,wBAAQJ,UAAWC,IAAO,YAAaQ,KAAK,SAA5C","file":"static/js/register-page.24f36372.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-title\":\"Reg-form_form-title__2P2n4\",\"form\":\"Reg-form_form__17u8F\",\"form-container\":\"Reg-form_form-container__1UwHo\",\"form-btn\":\"Reg-form_form-btn__dd5EJ\",\"form-label\":\"Reg-form_form-label__2bFCW\",\"form-label__radio\":\"Reg-form_form-label__radio__3IbTz\",\"form-radio-btn\":\"Reg-form_form-radio-btn__2lB8v\",\"form-input\":\"Reg-form_form-input__tLtOH\",\"form-error\":\"Reg-form_form-error__O7SYS\"};","import React from 'react';\nimport { Formik, Form, Field, useField } from 'formik';\nimport * as Yup from 'yup';\nimport styles from '../sass/Reg-form.module.scss';\nconst MyTextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <div className={styles['form-container']}>\n      <label className={styles['form-label']} htmlFor={props.id || props.name}>\n        {label}\n        {meta.touched && meta.error ? (\n          <div className={styles['form-error']}>*{meta.error}</div>\n        ) : null}\n      </label>\n      <input className={styles['form-input']} {...field} {...props} />\n    </div>\n  );\n};\n\nconst MyRadioBtn = ({ children, ...props }) => {\n  return (\n    <label className={styles['form-label__radio']}>\n      <Field\n        className={styles['form-radio-btn']}\n        type=\"radio\"\n        value={children === 'мужской' ? 'male' : 'female'}\n        {...props}\n      />\n      {children}\n    </label>\n  );\n};\n\nconst RegisterPage = () => {\n  return (\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        sex: '',\n      }}\n      validationSchema={Yup.object({\n        firstName: Yup.string(),\n        lastName: Yup.string(),\n        email: Yup.string()\n          .email('Указан неверный email')\n          .required('Обязательно'),\n        password: Yup.string().min(6).required('Обязательно'),\n      })}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        console.log(values);\n        setSubmitting(false);\n        resetForm();\n      }}\n    >\n      <Form className={styles.form}>\n        <h1 className={styles['form-title']}>Регистрация</h1>\n        <MyTextInput\n          label=\"Имя\"\n          name=\"firstName\"\n          type=\"text\"\n          placeholder=\"Введите имя\"\n          autoComplete=\"off\"\n        />\n\n        <MyTextInput\n          label=\"Фамилия\"\n          name=\"lastName\"\n          type=\"text\"\n          placeholder=\"Введите фамилию\"\n          autoComplete=\"off\"\n        />\n\n        <MyTextInput\n          label=\"Email\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"user@webstudio.com\"\n          autoComplete=\"off\"\n        />\n\n        <MyTextInput\n          label=\"Пароль\"\n          name=\"password\"\n          type=\"password\"\n          autoComplete=\"off\"\n        />\n        <div className={styles['form-container']}>\n          <div className={styles['form-label']} id=\"my-radio-group\">\n            Sex\n          </div>\n          <div role=\"group\" aria-labelledby=\"my-radio-group\">\n            <MyRadioBtn name=\"sex\">мужской</MyRadioBtn>\n            <MyRadioBtn name=\"sex\">женский</MyRadioBtn>\n          </div>\n        </div>\n\n        <button className={styles['form-btn']} type=\"submit\">\n          Зарегистрироваться\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default RegisterPage;\n"],"sourceRoot":""}