{"version":3,"sources":["components/SettingsList/SettingsList.module.scss","components/SettingsList/SettingsList.js","views/SettingsPage.js"],"names":["module","exports","MyTextInput","label","props","useField","field","meta","className","styles","htmlFor","id","name","touched","error","MyDownloadInput","type","for","MyRadioBtn","children","value","SettingsList","initialValues","firstName","validationSchema","Yup","required","onSubmit","values","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","form","placeholder","autoComplete","lastName","email","password","min","sex","role","avatar","method","enctype","accept","SettingsPage"],"mappings":"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","file":"static/js/settings-page.5e6ff232.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-title\":\"SettingsList_form-title__3rzX1\",\"form\":\"SettingsList_form__-ZYId\",\"form-main-container\":\"SettingsList_form-main-container__317AP\",\"form-container\":\"SettingsList_form-container__QxJpN\",\"form-btn\":\"SettingsList_form-btn__1B43P\",\"form-label\":\"SettingsList_form-label__1JuJB\",\"form-label__radio\":\"SettingsList_form-label__radio__10uAw\",\"form-radio-btn\":\"SettingsList_form-radio-btn__2krPI\",\"form-input\":\"SettingsList_form-input__3dAGO\",\"form-error\":\"SettingsList_form-error__1rWPo\",\"field__wrapper\":\"SettingsList_field__wrapper__1tjxm\",\"field__file\":\"SettingsList_field__file__3yqXS\",\"field__file-wrapper\":\"SettingsList_field__file-wrapper__dr96-\",\"field__file-fake\":\"SettingsList_field__file-fake__5JF74\",\"field__file-button\":\"SettingsList_field__file-button__197O4\"};","import React from 'react';\nimport styles from './SettingsList.module.scss';\nimport { Formik, Form, Field, useField } from 'formik';\nimport * as Yup from 'yup';\n\nconst MyTextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <div className={styles['form-container']}>\n      <label className={styles['form-label']} htmlFor={props.id || props.name}>\n        {label}\n        {meta.touched && meta.error ? (\n          <div className={styles['form-error']}>*{meta.error}</div>\n        ) : null}\n      </label>\n      <input className={styles['form-input']} {...field} {...props} />\n    </div>\n  );\n};\n\nconst MyDownloadInput = ({ label, ...props }) => {\n  // const [field, meta] = useField(props);\n  return (\n    <div className={styles['field__wrapper']}>\n      <input\n        className={styles['field__file']}\n        name=\"file\"\n        type=\"file\"\n        id=\"field__file-2\"\n      />\n\n      <label className={styles['field__file-wrapper']} for=\"field__file-2\">\n        <div className={styles['field__file-fake']}>Файл не вбран</div>\n        <div className={styles['field__file-button']}>Выбрать</div>\n      </label>\n    </div>\n  );\n};\n\nconst MyRadioBtn = ({ children, ...props }) => {\n  return (\n    <label className={styles['form-label__radio']}>\n      <Field\n        className={styles['form-radio-btn']}\n        type=\"radio\"\n        value={children}\n        {...props}\n      />\n      {children}\n    </label>\n  );\n};\n\nexport const SettingsList = () => {\n  return (\n    <div className={`container ${styles['form-main-container']}`}>\n      <Formik\n        initialValues={{\n          firstName: '',\n        }}\n        validationSchema={Yup.object({\n          firstName: Yup.string().required('required'),\n        })}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n            resetForm();\n          }, 400);\n        }}\n      >\n        <Form className={styles.form}>\n          <MyTextInput\n            label=\"First Name\"\n            name=\"firstName\"\n            type=\"text\"\n            placeholder=\"John\"\n            autoComplete=\"off\"\n          />\n          <button className={styles['form-btn']} type=\"submit\">\n            Change\n          </button>\n        </Form>\n      </Formik>\n      <Formik\n        initialValues={{\n          lastName: '',\n        }}\n        validationSchema={Yup.object({\n          lastName: Yup.string().required('required'),\n        })}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n            resetForm();\n          }, 400);\n        }}\n      >\n        <Form className={styles.form}>\n          <MyTextInput\n            label=\"Last Name\"\n            name=\"lastName\"\n            type=\"text\"\n            placeholder=\"Doe\"\n            autoComplete=\"off\"\n          />\n          <button className={styles['form-btn']} type=\"submit\">\n            Change\n          </button>\n        </Form>\n      </Formik>\n      <Formik\n        initialValues={{\n          email: '',\n        }}\n        validationSchema={Yup.object({\n          email: Yup.string()\n            .email('Invalid email address')\n            .required('required'),\n        })}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n            resetForm();\n          }, 400);\n        }}\n      >\n        <Form className={styles.form}>\n          <MyTextInput\n            label=\"Email Address\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"user@webstudio.com\"\n            autoComplete=\"off\"\n          />\n          <button className={styles['form-btn']} type=\"submit\">\n            Change\n          </button>\n        </Form>\n      </Formik>\n      <Formik\n        initialValues={{\n          password: '',\n        }}\n        validationSchema={Yup.object({\n          password: Yup.string().min(6).required('Required'),\n        })}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n            resetForm();\n          }, 400);\n        }}\n      >\n        <Form className={styles.form}>\n          <MyTextInput\n            label=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            autoComplete=\"off\"\n          />\n          <button className={styles['form-btn']} type=\"submit\">\n            Change\n          </button>\n        </Form>\n      </Formik>\n      <Formik\n        initialValues={{\n          sex: '',\n        }}\n        validationSchema={Yup.object({\n          sex: Yup.string().required('required'),\n        })}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n            resetForm();\n          }, 400);\n        }}\n      >\n        <Form className={styles.form}>\n          <div className={styles['form-container']}>\n            <div className={styles['form-label']} id=\"my-radio-group\">\n              Sex\n            </div>\n            <div role=\"group\" aria-labelledby=\"my-radio-group\">\n              <MyRadioBtn name=\"sex\">male</MyRadioBtn>\n              <MyRadioBtn name=\"sex\">female</MyRadioBtn>\n            </div>\n          </div>\n          <button className={styles['form-btn']} type=\"submit\">\n            Change\n          </button>\n        </Form>\n      </Formik>\n      <Formik\n        initialValues={{\n          avatar: '',\n        }}\n        validationSchema={Yup.object({\n          avatar: Yup.string().required('required'),\n        })}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n            resetForm();\n          }, 400);\n        }}\n      >\n        <Form\n          method=\"post\"\n          enctype=\"multipart/form-data\"\n          className={styles.form}\n        >\n          <MyDownloadInput\n            label=\"Avatar\"\n            name=\"avatar\"\n            type=\"file\"\n            accept=\"image/*\"\n          />\n          <button className={styles['form-btn']} type=\"submit\">\n            Change\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { SettingsList } from '../components/SettingsList/SettingsList';\n\nconst SettingsPage = () => <SettingsList />;\n\nexport default SettingsPage;\n"],"sourceRoot":""}