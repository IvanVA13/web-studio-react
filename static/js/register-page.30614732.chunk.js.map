{"version":3,"sources":["sass/Reg-form.module.scss","images/icon/google-symbol.svg","views/RegisterPage.js"],"names":["module","exports","MyTextInput","label","props","useField","field","meta","className","styles","htmlFor","id","name","touched","error","MyRadioBtn","children","type","value","RegisterPage","dispatch","useDispatch","initialValues","firstName","lastName","email","phone","password","sex","validationSchema","Yup","max","required","matches","min","onSubmit","values","setSubmitting","resetForm","credentials","Object","entries","forEach","register","form","placeholder","autoComplete","maxLength","autoCorrect","role","button","href","routes","serverUrl","src","googleIcon","alt","image"],"mappings":"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","file":"static/js/register-page.30614732.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"google-reg-link\":\"Reg-form_google-reg-link__2z96r\",\"form-link\":\"Reg-form_form-link__2alT0\",\"image\":\"Reg-form_image__HoTLs\",\"button\":\"Reg-form_button__1d14i\",\"form-title\":\"Reg-form_form-title__2P2n4\",\"image--margin\":\"Reg-form_image--margin__ym3Yt\",\"button__icon\":\"Reg-form_button__icon__29OBl\",\"form\":\"Reg-form_form__17u8F\",\"form-container\":\"Reg-form_form-container__1UwHo\",\"form-btn\":\"Reg-form_form-btn__dd5EJ\",\"google-reg-icon\":\"Reg-form_google-reg-icon__j8rkU\",\"form-label\":\"Reg-form_form-label__2bFCW\",\"form-label__radio\":\"Reg-form_form-label__radio__3IbTz\",\"form-radio-btn\":\"Reg-form_form-radio-btn__2lB8v\",\"form-input\":\"Reg-form_form-input__tLtOH\",\"form-error\":\"Reg-form_form-error__O7SYS\",\"form-link-second\":\"Reg-form_form-link-second__1ntGD\",\"form-desc\":\"Reg-form_form-desc__2Lr8b\"};","export default __webpack_public_path__ + \"static/media/google-symbol.6c5bf786.svg\";","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Formik, Form, Field, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport routes from '../routes';\r\nimport { register } from '../redux/auth';\r\nimport googleIcon from '../images/icon/google-symbol.svg';\r\nimport styles from '../sass/Reg-form.module.scss';\r\n\r\nconst MyTextInput = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div className={styles['form-container']}>\r\n      <label className={styles['form-label']} htmlFor={props.id || props.name}>\r\n        {label}\r\n        {meta.touched && meta.error ? (\r\n          <div className={styles['form-error']}>*{meta.error}</div>\r\n        ) : null}\r\n      </label>\r\n      <input className={styles['form-input']} {...field} {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MyRadioBtn = ({ children, ...props }) => {\r\n  return (\r\n    <label className={styles['form-label__radio']}>\r\n      <Field\r\n        className={styles['form-radio-btn']}\r\n        type=\"radio\"\r\n        value={children === 'мужской' ? 'male' : 'female'}\r\n        {...props}\r\n      />\r\n      {children}\r\n    </label>\r\n  );\r\n};\r\n\r\nconst RegisterPage = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phone: '',\r\n        password: '',\r\n        sex: '',\r\n      }}\r\n      validationSchema={Yup.object({\r\n        firstName: Yup.string().max(25),\r\n        lastName: Yup.string().max(25),\r\n        email: Yup.string()\r\n          .email('Указан неверный email')\r\n          .required('Обязательно'),\r\n        phone: Yup.string()\r\n          .matches(/[0-9]+/, 'Номер телефона состоит только из цифр')\r\n          .min(12, 'Номер телефона состоит из 12 цифр')\r\n          .required('Обязательно'),\r\n        password: Yup.string().min(6).required('Обязательно'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        const credentials = {};\r\n        Object.entries(values).forEach(value => {\r\n          if (value[1]) {\r\n            credentials[value[0]] = value[1];\r\n          }\r\n        });\r\n        dispatch(register(credentials));\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }}\r\n    >\r\n      <Form className={styles.form}>\r\n        <h1 className={styles['form-title']}>Регистрация</h1>\r\n        <MyTextInput\r\n          label=\"Имя\"\r\n          name=\"firstName\"\r\n          type=\"text\"\r\n          placeholder=\"Введите имя\"\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <MyTextInput\r\n          label=\"Фамилия\"\r\n          name=\"lastName\"\r\n          type=\"text\"\r\n          placeholder=\"Введите фамилию\"\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <MyTextInput\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"user@webstudio.com\"\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <MyTextInput\r\n          label=\"Телефон\"\r\n          name=\"phone\"\r\n          type=\"tel\"\r\n          maxLength=\"12\"\r\n          autoCorrect=\"true\"\r\n          placeholder=\"Введите номер телефона\"\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <MyTextInput\r\n          label=\"Пароль\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <div className={styles['form-container']}>\r\n          <div className={styles['form-label']} id=\"my-radio-group\">\r\n            Пол\r\n          </div>\r\n          <div role=\"group\" aria-labelledby=\"my-radio-group\">\r\n            <MyRadioBtn name=\"sex\">мужской</MyRadioBtn>\r\n            <MyRadioBtn name=\"sex\">женский</MyRadioBtn>\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          className={`${styles.button} ${styles['form-btn']}`}\r\n          type=\"submit\"\r\n        >\r\n          Зарегистрироваться\r\n        </button>\r\n        <a\r\n          href={`${routes.serverUrl}/users/google-auth`}\r\n          className={styles['google-reg-link']}\r\n        >\r\n          <img\r\n            src={googleIcon}\r\n            alt=\"Google Symbol\"\r\n            className={`${styles.image} ${styles['google-reg-icon']}`}\r\n          />\r\n          Регистрация через Google\r\n        </a>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"sourceRoot":""}