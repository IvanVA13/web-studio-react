{"version":3,"sources":["sass/Reg-form.module.scss","images/icon/google-symbol.svg","views/RegisterPage.js"],"names":["module","exports","MyTextInput","_ref","label","props","field","meta","useField","_jsxs","className","styles","children","htmlFor","id","name","touched","error","_jsx","MyRadioBtn","_ref2","Field","type","value","RegisterPage","dispatch","useDispatch","Formik","initialValues","firstName","lastName","email","phone","password","sex","validationSchema","Yup","max","required","matches","min","onSubmit","values","_ref3","setSubmitting","resetForm","credentials","Object","entries","forEach","register","Form","form","placeholder","autoComplete","maxLength","autoCorrect","role","concat","button","href","routes","serverUrl","src","googleIcon","alt","image"],"mappings":"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","file":"static/js/register-page.757714f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"google-reg-link\":\"Reg-form_google-reg-link__GJ9P0\",\"form-link\":\"Reg-form_form-link__2Js7W\",\"image\":\"Reg-form_image__3l5bL\",\"button\":\"Reg-form_button__d3zr6\",\"form-title\":\"Reg-form_form-title__2d0Y8\",\"image--margin\":\"Reg-form_image--margin__1Wb4D\",\"button__icon\":\"Reg-form_button__icon__1mbfR\",\"form\":\"Reg-form_form__1NSwk\",\"form-container\":\"Reg-form_form-container__1G4vN\",\"form-btn\":\"Reg-form_form-btn__3eXvF\",\"google-reg-icon\":\"Reg-form_google-reg-icon__3-GEf\",\"form-label\":\"Reg-form_form-label__3ILZX\",\"form-label__radio\":\"Reg-form_form-label__radio__1RGBJ\",\"form-radio-btn\":\"Reg-form_form-radio-btn__yiqtR\",\"form-input\":\"Reg-form_form-input__3jq5U\",\"form-error\":\"Reg-form_form-error__29_HN\",\"form-link-second\":\"Reg-form_form-link-second__2TAhF\",\"form-desc\":\"Reg-form_form-desc__1dodw\"};","export default __webpack_public_path__ + \"static/media/google-symbol.6c5bf786.svg\";","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, Field, useField } from 'formik';\nimport * as Yup from 'yup';\n\nimport routes from '../routes';\nimport { register } from '../redux/auth';\nimport googleIcon from '../images/icon/google-symbol.svg';\nimport styles from '../sass/Reg-form.module.scss';\n\nconst MyTextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <div className={styles['form-container']}>\n      <label className={styles['form-label']} htmlFor={props.id || props.name}>\n        {label}\n        {meta.touched && meta.error ? (\n          <div className={styles['form-error']}>*{meta.error}</div>\n        ) : null}\n      </label>\n      <input className={styles['form-input']} {...field} {...props} />\n    </div>\n  );\n};\n\nconst MyRadioBtn = ({ children, ...props }) => {\n  return (\n    <label className={styles['form-label__radio']}>\n      <Field\n        className={styles['form-radio-btn']}\n        type=\"radio\"\n        value={children === 'мужской' ? 'male' : 'female'}\n        {...props}\n      />\n      {children}\n    </label>\n  );\n};\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: '',\n        password: '',\n        sex: '',\n      }}\n      validationSchema={Yup.object({\n        firstName: Yup.string().max(25),\n        lastName: Yup.string().max(25),\n        email: Yup.string()\n          .email('Указан неверный email')\n          .required('Обязательно'),\n        phone: Yup.string()\n          .matches(/[0-9]+/, 'Номер телефона состоит только из цифр')\n          .min(12, 'Номер телефона состоит из 12 цифр')\n          .required('Обязательно'),\n        password: Yup.string().min(6).required('Обязательно'),\n      })}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        const credentials = {};\n        Object.entries(values).forEach(value => {\n          if (value[1]) {\n            credentials[value[0]] = value[1];\n          }\n        });\n        dispatch(register(credentials));\n        setSubmitting(false);\n        resetForm();\n      }}\n    >\n      <Form className={styles.form}>\n        <h1 className={styles['form-title']}>Регистрация</h1>\n        <MyTextInput\n          label=\"Имя\"\n          name=\"firstName\"\n          type=\"text\"\n          placeholder=\"Введите имя\"\n          autoComplete=\"off\"\n        />\n\n        <MyTextInput\n          label=\"Фамилия\"\n          name=\"lastName\"\n          type=\"text\"\n          placeholder=\"Введите фамилию\"\n          autoComplete=\"off\"\n        />\n\n        <MyTextInput\n          label=\"Email\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"user@webstudio.com\"\n          autoComplete=\"off\"\n        />\n\n        <MyTextInput\n          label=\"Телефон\"\n          name=\"phone\"\n          type=\"tel\"\n          maxLength=\"12\"\n          autoCorrect=\"true\"\n          placeholder=\"Введите номер телефона\"\n          autoComplete=\"off\"\n        />\n\n        <MyTextInput\n          label=\"Пароль\"\n          name=\"password\"\n          type=\"password\"\n          autoComplete=\"off\"\n        />\n        <div className={styles['form-container']}>\n          <div className={styles['form-label']} id=\"my-radio-group\">\n            Пол\n          </div>\n          <div role=\"group\" aria-labelledby=\"my-radio-group\">\n            <MyRadioBtn name=\"sex\">мужской</MyRadioBtn>\n            <MyRadioBtn name=\"sex\">женский</MyRadioBtn>\n          </div>\n        </div>\n\n        <button\n          className={`${styles.button} ${styles['form-btn']}`}\n          type=\"submit\"\n        >\n          Зарегистрироваться\n        </button>\n        <a\n          href={`${routes.serverUrl}/users/google-auth`}\n          className={styles['google-reg-link']}\n        >\n          <img\n            src={googleIcon}\n            alt=\"Google Symbol\"\n            className={`${styles.image} ${styles['google-reg-icon']}`}\n          />\n          Регистрация через Google\n        </a>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default RegisterPage;\n"],"sourceRoot":""}