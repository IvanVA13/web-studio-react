{"version":3,"sources":["sass/Reg-form.module.scss","images/icon/google-symbol.svg","views/RegisterPage.js"],"names":["module","exports","MyTextInput","label","props","useField","field","meta","className","styles","htmlFor","id","name","touched","error","MyRadioBtn","children","type","value","RegisterPage","dispatch","useDispatch","initialValues","firstName","lastName","email","password","sex","validationSchema","Yup","required","min","onSubmit","values","setSubmitting","resetForm","credentials","Object","entries","forEach","register","form","placeholder","autoComplete","role","button","onClick","googleAuth","src","googleIcon","alt","image"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,YAAY,4BAA4B,MAAQ,wBAAwB,OAAS,yBAAyB,aAAa,6BAA6B,gBAAgB,gCAAgC,aAAe,+BAA+B,KAAO,uBAAuB,iBAAiB,iCAAiC,WAAW,2BAA2B,iBAAiB,iCAAiC,kBAAkB,kCAAkC,aAAa,6BAA6B,oBAAoB,oCAAoC,iBAAiB,iCAAiC,aAAa,6BAA6B,aAAa,6BAA6B,YAAY,8B,+HCDrsB,MAA0B,0C,kCCSnCC,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUC,EAAY,iBAC3C,EAAsBC,YAASD,GAA/B,mBAAOE,EAAP,KAAcC,EAAd,KACA,OACE,sBAAKC,UAAWC,IAAO,kBAAvB,UACE,wBAAOD,UAAWC,IAAO,cAAeC,QAASN,EAAMO,IAAMP,EAAMQ,KAAnE,UACGT,EACAI,EAAKM,SAAWN,EAAKO,MACpB,sBAAKN,UAAWC,IAAO,cAAvB,cAAwCF,EAAKO,SAC3C,QAEN,+CAAON,UAAWC,IAAO,eAAmBH,GAAWF,QAKvDW,EAAa,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaZ,EAAY,iBAC7C,OACE,wBAAOI,UAAWC,IAAO,qBAAzB,UACE,cAAC,IAAD,aACED,UAAWC,IAAO,kBAClBQ,KAAK,QACLC,MAAoB,+CAAbF,EAAyB,OAAS,UACrCZ,IAELY,MAyGQG,UApGM,WACnB,IAAMC,EAAWC,cAKjB,OACE,cAAC,IAAD,CACEC,cAAe,CACbC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,IAAK,IAEPC,iBAAkBC,IAAW,CAC3BN,UAAWM,MACXL,SAAUK,MACVJ,MAAOI,MACJJ,MAAM,+FACNK,SAAS,sEACZJ,SAAUG,MAAaE,IAAI,GAAGD,SAAS,wEAEzCE,SAAU,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC5BC,EAAc,GACpBC,OAAOC,QAAQL,GAAQM,SAAQ,SAAArB,GACzBA,EAAM,KACRkB,EAAYlB,EAAM,IAAMA,EAAM,OAGlCE,EAASoB,YAASJ,IAClBF,GAAc,GACdC,KAzBJ,SA4BE,eAAC,IAAD,CAAM3B,UAAWC,IAAOgC,KAAxB,UACE,oBAAIjC,UAAWC,IAAO,cAAtB,gFACA,cAAC,EAAD,CACEN,MAAM,qBACNS,KAAK,YACLK,KAAK,OACLyB,YAAY,gEACZC,aAAa,QAGf,cAAC,EAAD,CACExC,MAAM,6CACNS,KAAK,WACLK,KAAK,OACLyB,YAAY,wFACZC,aAAa,QAGf,cAAC,EAAD,CACExC,MAAM,QACNS,KAAK,QACLK,KAAK,QACLyB,YAAY,qBACZC,aAAa,QAGf,cAAC,EAAD,CACExC,MAAM,uCACNS,KAAK,WACLK,KAAK,WACL0B,aAAa,QAEf,sBAAKnC,UAAWC,IAAO,kBAAvB,UACE,qBAAKD,UAAWC,IAAO,cAAeE,GAAG,iBAAzC,gCAGA,sBAAKiC,KAAK,QAAQ,kBAAgB,iBAAlC,UACE,cAAC,EAAD,CAAYhC,KAAK,MAAjB,wDACA,cAAC,EAAD,CAAYA,KAAK,MAAjB,8DAIJ,wBACEJ,UAAS,UAAKC,IAAOoC,OAAZ,YAAsBpC,IAAO,aACtCQ,KAAK,SAFP,0HAMA,yBACE6B,QAjFY,WAClB1B,EAAS2B,gBAiFH9B,KAAK,SACLT,UAAS,UAAKC,IAAOoC,OAAZ,YAAsBpC,IAAO,mBAHxC,UAKE,qBACEuC,IAAKC,EACLC,IAAI,gBACJ1C,UAAS,UAAKC,IAAO0C,MAAZ,YAAqB1C,IAAO,sBARzC","file":"static/js/register-page.0d5e296b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-link\":\"Reg-form_form-link__1lShV\",\"image\":\"Reg-form_image__OuwiR\",\"button\":\"Reg-form_button__3Kz44\",\"form-title\":\"Reg-form_form-title__3AMox\",\"image--margin\":\"Reg-form_image--margin__1OcBr\",\"button__icon\":\"Reg-form_button__icon__1Adkp\",\"form\":\"Reg-form_form__1OFJW\",\"form-container\":\"Reg-form_form-container__19byQ\",\"form-btn\":\"Reg-form_form-btn__PSCzj\",\"google-reg-btn\":\"Reg-form_google-reg-btn__3DM2Z\",\"google-reg-icon\":\"Reg-form_google-reg-icon__3eEzH\",\"form-label\":\"Reg-form_form-label__22Ags\",\"form-label__radio\":\"Reg-form_form-label__radio__TV6Kq\",\"form-radio-btn\":\"Reg-form_form-radio-btn__30r_1\",\"form-input\":\"Reg-form_form-input__2dU37\",\"form-error\":\"Reg-form_form-error__2f5Lm\",\"form-desc\":\"Reg-form_form-desc__1eJ1l\"};","export default __webpack_public_path__ + \"static/media/google-symbol.6c5bf786.svg\";","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, Field, useField } from 'formik';\nimport * as Yup from 'yup';\n\nimport styles from '../sass/Reg-form.module.scss';\nimport { googleAuth, register } from '../redux/auth';\nimport googleIcon from '../images/icon/google-symbol.svg';\n\nconst MyTextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <div className={styles['form-container']}>\n      <label className={styles['form-label']} htmlFor={props.id || props.name}>\n        {label}\n        {meta.touched && meta.error ? (\n          <div className={styles['form-error']}>*{meta.error}</div>\n        ) : null}\n      </label>\n      <input className={styles['form-input']} {...field} {...props} />\n    </div>\n  );\n};\n\nconst MyRadioBtn = ({ children, ...props }) => {\n  return (\n    <label className={styles['form-label__radio']}>\n      <Field\n        className={styles['form-radio-btn']}\n        type=\"radio\"\n        value={children === 'мужской' ? 'male' : 'female'}\n        {...props}\n      />\n      {children}\n    </label>\n  );\n};\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(googleAuth());\n  };\n  return (\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        sex: '',\n      }}\n      validationSchema={Yup.object({\n        firstName: Yup.string(),\n        lastName: Yup.string(),\n        email: Yup.string()\n          .email('Указан неверный email')\n          .required('Обязательно'),\n        password: Yup.string().min(6).required('Обязательно'),\n      })}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        const credentials = {};\n        Object.entries(values).forEach(value => {\n          if (value[1]) {\n            credentials[value[0]] = value[1];\n          }\n        });\n        dispatch(register(credentials));\n        setSubmitting(false);\n        resetForm();\n      }}\n    >\n      <Form className={styles.form}>\n        <h1 className={styles['form-title']}>Регистрация</h1>\n        <MyTextInput\n          label=\"Имя\"\n          name=\"firstName\"\n          type=\"text\"\n          placeholder=\"Введите имя\"\n          autoComplete=\"off\"\n        />\n\n        <MyTextInput\n          label=\"Фамилия\"\n          name=\"lastName\"\n          type=\"text\"\n          placeholder=\"Введите фамилию\"\n          autoComplete=\"off\"\n        />\n\n        <MyTextInput\n          label=\"Email\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"user@webstudio.com\"\n          autoComplete=\"off\"\n        />\n\n        <MyTextInput\n          label=\"Пароль\"\n          name=\"password\"\n          type=\"password\"\n          autoComplete=\"off\"\n        />\n        <div className={styles['form-container']}>\n          <div className={styles['form-label']} id=\"my-radio-group\">\n            Пол\n          </div>\n          <div role=\"group\" aria-labelledby=\"my-radio-group\">\n            <MyRadioBtn name=\"sex\">мужской</MyRadioBtn>\n            <MyRadioBtn name=\"sex\">женский</MyRadioBtn>\n          </div>\n        </div>\n\n        <button\n          className={`${styles.button} ${styles['form-btn']}`}\n          type=\"submit\"\n        >\n          Зарегистрироваться\n        </button>\n        <button\n          onClick={handleClick}\n          type=\"button\"\n          className={`${styles.button} ${styles['google-reg-btn']}`}\n        >\n          <img\n            src={googleIcon}\n            alt=\"Google Symbol\"\n            className={`${styles.image} ${styles['google-reg-icon']}`}\n          />\n          Регистрация через Google\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default RegisterPage;\n"],"sourceRoot":""}