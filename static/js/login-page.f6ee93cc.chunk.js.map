{"version":3,"sources":["sass/Reg-form.module.scss","images/icon/google-symbol.svg","views/LogInPage.js"],"names":["module","exports","MyTextInput","label","props","useField","field","meta","className","styles","htmlFor","id","name","touched","error","LogInPage","loc","useLocation","dispatch","useDispatch","search","slice","split","length","searchArr","session","forEach","searchParam","paramArr","match","googleAuth","currentUser","initialValues","email","password","validationSchema","Yup","required","min","onSubmit","values","setSubmitting","resetForm","login","form","type","placeholder","autoComplete","to","routes","forgotten","button","href","serverUrl","src","googleIcon","alt","image","verify"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,kBAAkB,kCAAkC,YAAY,4BAA4B,MAAQ,wBAAwB,OAAS,yBAAyB,aAAa,6BAA6B,gBAAgB,gCAAgC,aAAe,+BAA+B,KAAO,uBAAuB,iBAAiB,iCAAiC,WAAW,2BAA2B,kBAAkB,kCAAkC,aAAa,6BAA6B,oBAAoB,oCAAoC,iBAAiB,iCAAiC,aAAa,6BAA6B,aAAa,6BAA6B,mBAAmB,mCAAmC,YAAY,8B,iCCD7vB,QAA0B,2C,0LCYnCC,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUC,EAAY,iBAC3C,EAAsBC,YAASD,GAA/B,mBAAOE,EAAP,KAAcC,EAAd,KACA,OACE,sBAAKC,UAAWC,IAAO,kBAAvB,UACE,wBAAOD,UAAWC,IAAO,cAAeC,QAASN,EAAMO,IAAMP,EAAMQ,KAAnE,UACGT,EACAI,EAAKM,SAAWN,EAAKO,MACpB,sBAAKN,UAAWC,IAAO,cAAvB,cAAwCF,EAAKO,SAC3C,QAEN,+CAAON,UAAWC,IAAO,eAAmBH,GAAWF,QA0F9CW,UArFG,WAChB,IAAMC,EAAMC,cACNC,EAAWC,cACjB,GAAIH,EAAII,QAAsD,IAA5CJ,EAAII,OAAOC,MAAM,GAAGC,MAAM,OAAOC,OAAc,CAC/D,IAAMC,EAAYR,EAAII,OAAOC,MAAM,GAAGC,MAAM,KACtCG,EAAU,GAChBD,EAAUE,SAAQ,SAAAC,GAChB,IAAMC,EAAWD,EAAYL,MAAM,KAC/BM,EAAS,GAAGC,MAAM,2BAA6BD,EAAS,KAC1DH,EAAQG,EAAS,IAAMA,EAAS,OAKpCV,EAASY,YAAWL,IACpBP,EAASa,eAEX,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,IAAW,CAC3BH,MAAOG,MACJH,MAAM,+FACNI,SAAS,sEACZH,SAAUE,MAAaE,IAAI,GAAGD,SAAS,wEAEzCE,SAAU,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAClCxB,EAASyB,YAAMH,IACfC,GAAc,GACdC,KAdJ,SAiBE,eAAC,IAAD,CAAMlC,UAAWC,IAAOmC,KAAxB,UACE,oBAAIpC,UAAWC,IAAO,cAAtB,sCAEA,cAACP,EAAD,CACEC,MAAM,QACNS,KAAK,QACLiC,KAAK,QACLC,YAAY,qBACZC,aAAa,QAGf,cAAC7C,EAAD,CACEC,MAAM,uCACNS,KAAK,WACLiC,KAAK,WACLE,aAAa,QAEf,cAAC,IAAD,CACEC,GAAIC,IAAOC,UACX1C,UAAS,UAAKC,IAAO,aAAZ,YAA4BA,IAAO,qBAF9C,wFAMA,wBACED,UAAS,UAAKC,IAAO0C,OAAZ,YAAsB1C,IAAO,aACtCoC,KAAK,SAFP,sCAMA,oBACEO,KAAI,UAAKH,IAAOI,UAAZ,sBACJ7C,UAAWC,IAAO,mBAFpB,UAIE,qBACE6C,IAAKC,IACLC,IAAI,gBACJhD,UAAS,UAAKC,IAAOgD,MAAZ,YAAqBhD,IAAO,sBAPzC,oEAWA,cAAC,IAAD,CAASuC,GAAIC,IAAOS,OAAQlD,UAAWC,IAAO,aAA9C","file":"static/js/login-page.f6ee93cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"google-reg-link\":\"Reg-form_google-reg-link__2z96r\",\"form-link\":\"Reg-form_form-link__2alT0\",\"image\":\"Reg-form_image__HoTLs\",\"button\":\"Reg-form_button__1d14i\",\"form-title\":\"Reg-form_form-title__2P2n4\",\"image--margin\":\"Reg-form_image--margin__ym3Yt\",\"button__icon\":\"Reg-form_button__icon__29OBl\",\"form\":\"Reg-form_form__17u8F\",\"form-container\":\"Reg-form_form-container__1UwHo\",\"form-btn\":\"Reg-form_form-btn__dd5EJ\",\"google-reg-icon\":\"Reg-form_google-reg-icon__j8rkU\",\"form-label\":\"Reg-form_form-label__2bFCW\",\"form-label__radio\":\"Reg-form_form-label__radio__3IbTz\",\"form-radio-btn\":\"Reg-form_form-radio-btn__2lB8v\",\"form-input\":\"Reg-form_form-input__tLtOH\",\"form-error\":\"Reg-form_form-error__O7SYS\",\"form-link-second\":\"Reg-form_form-link-second__1ntGD\",\"form-desc\":\"Reg-form_form-desc__2Lr8b\"};","export default __webpack_public_path__ + \"static/media/google-symbol.6c5bf786.svg\";","import React from 'react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport { Formik, Form, useField } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\nimport routes from '../routes';\r\nimport { login, googleAuth, currentUser } from '../redux/auth';\r\nimport googleIcon from '../images/icon/google-symbol.svg';\r\nimport styles from '../sass/Reg-form.module.scss';\r\nimport Container from '../components/Wrappers/Container';\r\n\r\nconst MyTextInput = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div className={styles['form-container']}>\r\n      <label className={styles['form-label']} htmlFor={props.id || props.name}>\r\n        {label}\r\n        {meta.touched && meta.error ? (\r\n          <div className={styles['form-error']}>*{meta.error}</div>\r\n        ) : null}\r\n      </label>\r\n      <input className={styles['form-input']} {...field} {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LogInPage = () => {\r\n  const loc = useLocation();\r\n  const dispatch = useDispatch();\r\n  if (loc.search && loc.search.slice(1).split(/&|=/).length === 6) {\r\n    const searchArr = loc.search.slice(1).split('&');\r\n    const session = {};\r\n    searchArr.forEach(searchParam => {\r\n      const paramArr = searchParam.split('=');\r\n      if (paramArr[0].match(/token|refreshToken|sid/) && paramArr[1]) {\r\n        session[paramArr[0]] = paramArr[1];\r\n      } else {\r\n        return;\r\n      }\r\n    });\r\n    dispatch(googleAuth(session));\r\n    dispatch(currentUser());\r\n  }\r\n  return (\r\n    <Container>\r\n      <Formik\r\n        initialValues={{\r\n          email: '',\r\n          password: '',\r\n        }}\r\n        validationSchema={Yup.object({\r\n          email: Yup.string()\r\n            .email('Указан неверный email')\r\n            .required('Обязательно'),\r\n          password: Yup.string().min(6).required('Обязательно'),\r\n        })}\r\n        onSubmit={(values, { setSubmitting, resetForm }) => {\r\n          dispatch(login(values));\r\n          setSubmitting(false);\r\n          resetForm();\r\n        }}\r\n      >\r\n        <Form className={styles.form}>\r\n          <h1 className={styles['form-title']}>Вход</h1>\r\n\r\n          <MyTextInput\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"user@webstudio.com\"\r\n            autoComplete=\"off\"\r\n          />\r\n\r\n          <MyTextInput\r\n            label=\"Пароль\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <NavLink\r\n            to={routes.forgotten}\r\n            className={`${styles['form-link']} ${styles['form-link-second']}`}\r\n          >\r\n            Забыли пароль?\r\n          </NavLink>\r\n          <button\r\n            className={`${styles.button} ${styles['form-btn']}`}\r\n            type=\"submit\"\r\n          >\r\n            Вход\r\n          </button>\r\n          <a\r\n            href={`${routes.serverUrl}/users/google-auth`}\r\n            className={styles['google-reg-link']}\r\n          >\r\n            <img\r\n              src={googleIcon}\r\n              alt=\"Google Symbol\"\r\n              className={`${styles.image} ${styles['google-reg-icon']}`}\r\n            />\r\n            Вход через Google\r\n          </a>\r\n          <NavLink to={routes.verify} className={styles['form-link']}>\r\n            Выслать повторно письмо для верификации\r\n          </NavLink>\r\n        </Form>\r\n      </Formik>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LogInPage;\r\n"],"sourceRoot":""}